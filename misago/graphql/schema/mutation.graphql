type Mutation {
    login(username: String!, password: String!): LoginMutationResult!
    register(input: RegisterInput!): RegisterMutationResult!
    postThread(input: PostThreadInput!): PostMutationResult!
    postReply(input: PostReplyInput!): PostMutationResult!
    editPost(input: EditPostInput!): PostMutationResult!
    editThreadTitle(input: EditThreadTitleInput!): ThreadMutationResult!
    closeThread(input: CloseThreadInput!): ThreadMutationResult!
    moveThread(input: MoveThreadInput!): ThreadMutationResult!
    deleteThread(input: DeleteThreadInput!): DeleteThreadMutationResult!
    closeThreads(input: BulkCloseThreadsInput!): BulkThreadsMutationResult!
    moveThreads(input: BulkMoveThreadsInput!): BulkThreadsMutationResult!
    deleteThreads(input: BulkDeleteThreadsInput!): BulkDeleteThreadsMutationResult!
    deleteThreadReply(input: DeleteThreadReplyInput!): DeleteThreadReplyMutationResult!
    deleteThreadReplies(input: BulkDeleteThreadRepliesInput!): BulkDeleteThreadRepliesMutationResult!
}

type LoginMutationResult {
    error: Error
    token: String
    user: User
}

input RegisterInput {
    name: String!
    email: String!
    password: String!
}

type RegisterMutationResult {
    errors: [Error!]
    token: String
    user: User
}

input PostThreadInput {
    category: ID!
    title: String!
    body: String!
}

input PostReplyInput {
    thread: ID!
    body: String!
}

input EditPostInput {
    post: ID!
    body: String!
}

type PostMutationResult {
    errors: [Error!]
    thread: Thread
    post: Post
}

input EditThreadTitleInput {
    thread: ID!
    title: String!
}

input CloseThreadInput {
    thread: ID!
    isClosed: Boolean!
}

input MoveThreadInput {
    thread: ID!
    category: ID!
}

type ThreadMutationResult {
    errors: [Error!]
    thread: Thread
}

input DeleteThreadInput {
    thread: ID!
}

type DeleteThreadMutationResult {
    errors: [Error!]
}

input BulkCloseThreadsInput {
    threads: [ID!]!
    isClosed: Boolean!
}

input BulkMoveThreadsInput {
    threads: [ID!]!
    category: ID!
}

type BulkThreadsMutationResult {
    errors: [Error!]
    threads: [Thread!]
}

input BulkDeleteThreadsInput {
    threads: [ID!]!
}

type BulkDeleteThreadsMutationResult {
    errors: [Error!]
}

input DeleteThreadReplyInput {
    thread: ID!
    reply: ID!
}

type DeleteThreadReplyMutationResult {
    errors: [Error!]
    thread: Thread
}

input BulkDeleteThreadRepliesInput {
    thread: ID!
    replies: [ID!]!
}

type BulkDeleteThreadRepliesMutationResult {
    errors: [Error!]
    thread: Thread
}